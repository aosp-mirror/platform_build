package {package_name}; {#- CODEGEN FOR EXPORTED MODE FOR NEW STORAGE SINGLE EXPORTED FILE#}

import android.os.Build;
import android.os.flagging.AconfigPackage;
import android.util.Log;
public final class ExportedFlags \{
{{ -for item in flag_elements}}
    public static final String FLAG_{item.flag_name_constant_suffix} = "{item.device_config_flag}";
{{- endfor }}
    private static final String TAG = "ExportedFlags";
    private static volatile boolean isCached = false;
{{ for flag in flag_elements }}
    private static boolean {flag.method_name} = false;
{{ -endfor }} {#- end flag_elements #}
    private ExportedFlags() \{}

    private void init() \{
        try \{
            AconfigPackage reader = AconfigPackage.load("{package_name}");
            {{ -for namespace_with_flags in namespace_flags }}
            {{ -for flag in namespace_with_flags.flags }}
            {{ -if flag.finalized_sdk_present }}
            {flag.method_name} = Build.VERSION.SDK_INT >= {flag.finalized_sdk_value} ? true : reader.getBooleanFlagValue("{flag.flag_name}", {flag.default_value});
            {{ - else }} {#- else finalized_sdk_present #}
            {flag.method_name} = reader.getBooleanFlagValue("{flag.flag_name}", {flag.default_value});
            {{ -endif}}  {#- end finalized_sdk_present#}
            {{ -endfor }} {#- end namespace_with_flags.flags #}
            {{ -endfor }} {#- end namespace_flags #}
        } catch (Exception e) \{
            // pass
            Log.e(TAG, e.toString());
        } catch (LinkageError e) \{
            // for mainline module running on older devices.
            // This should be replaces to version check, after the version bump.
            Log.w(TAG, e.toString());
        }
        isCached = true;
    }

{{ -for flag in flag_elements }}
    public static boolean {flag.method_name}() \{
        if (!featureFlags.isCached) \{
            featureFlags.init();
        }
        return featureFlags.{flag.method_name};
    }
{{ -endfor }}
    private static ExportedFlags featureFlags = new ExportedFlags();
}
